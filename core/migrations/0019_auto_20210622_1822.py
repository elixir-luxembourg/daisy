# Generated by Django 2.2.20 on 2021-06-22 16:22

from django.db import migrations, models
import core.models.use_restriction


class Migration(migrations.Migration):
    dependencies = [
        ("core", "0018_load_datalogtype_fixtures"),
    ]

    def migrate_existing_restrictions(apps, schema_editor):
        mappings = {
            "CONSTRAINTS": "CONSTRAINED_PERMISSION",
            "NO_CONSTRAINTS": "PERMISSION",
            "FORBIDDEN": "PROHIBITION",
        }
        UseRestrictions = apps.get_model("core", "UseRestriction")
        for restriction in UseRestrictions.objects.all():
            if restriction.use_restriction_rule is not None:
                restriction.use_restriction_rule = mappings.get(
                    restriction.use_restriction_rule, "PROHIBITION"
                )
                restriction.save()

    def reverse_migrate_existing_restrictions(apps, schema_editor):
        reversed_mappings = {
            "CONSTRAINED_PERMISSION": "CONSTRAINTS",
            "PERMISSION": "NO_CONSTRAINTS",
            "PROHIBITION": "FORBIDDEN",
        }
        UseRestrictions = apps.get_model("core", "UseRestriction")
        for restriction in UseRestrictions.objects.all():
            if restriction.use_restriction_rule is not None:
                restriction.use_restriction_rule = reversed_mappings.get(
                    restriction.use_restriction_rule, "FORBIDDEN"
                )
                restriction.save()

    operations = [
        migrations.AlterField(
            model_name="userestriction",
            name="use_restriction_rule",
            field=models.TextField(
                choices=[
                    ("OBLIGATION", "OBLIGATION"),
                    ("PERMISSION", "PERMISSION"),
                    ("PROHIBITION", "PROHIBITION"),
                    ("CONSTRAINED_PERMISSION", "CONSTRAINED_PERMISSION"),
                ],
                default="PROHIBITION",
                max_length=64,
                verbose_name="Use Restriction Rule",
            ),
        ),
        migrations.RunPython(
            migrate_existing_restrictions, reverse_migrate_existing_restrictions
        ),
    ]
